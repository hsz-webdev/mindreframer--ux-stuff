/*
 * Remove the gap between images, videos, audio and canvas and the bottom of
 * their containers: h5bp.com/i/440
 */

audio,
canvas,
img,
video {
    vertical-align: middle;
}

/*
 * Make the image responsive.
 */
img {
    max-width: 100%;
    height: auto;
}

/*
 * Remove the border around images in anchors.
 */
a img {
    border: none;
}


/*
 * Properly scale your video on any device based on YouTube/Dailymotion ratio.
 */
.media {
    position: relative;
    padding-top: 30px;
    padding-bottom: 56.25%;
    height: 0;
    height: auto;
    max-width: 100%;
    margin-bottom: 1em;
    overflow: hidden;
}

/* 
 *  Scrollable media 
 */
.media-scroll {
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
}

/* 
 * Widescreen mode.
 */
.media.widescreen {
    padding-bottom: 45%;
}

/*
 * Vimeo places the controls on the player itself.
 */
.media.vimeo {
    padding-top: 0;
}

/*
 * Instagram
 */
.media.instagram {
    height: auto;
    max-width: none;
    padding-bottom: 120%;
}

/*
 * Vine
 */
.media.vine {
    height: auto;
    max-width: none;
    padding-bottom: 100%;
}

.media.video {
    padding-top: 0;
}

/*
 * The actual player.
 */
.media iframe,
.media object,
.media embed,
.media video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    border: 0;
    outline: none;
    background-color: transparent;
}

/*
 * Position the image absolutely and then move it's four positions
 * 1000000% out of the container. This with an auto margin is the core of the trick.
 * Why such a large number? Firefox seems to have issue when using larger images even
 * at 100%.
 */
.media img {
    position: absolute;
    top: -1000000%;
    right: -1000000%;
    bottom: -1000000%;
    left: -1000000%;
    margin: auto;
    width: 100%;
}
